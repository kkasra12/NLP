پایتون ۳
پایتون ۳٫۰ (که پایتون ۳۰۰۰ ویا Py3k نیز خوانده می‌شود) به منظور شکستن سازگاری عقبرو (به انگلیسی: backward compatibility) یا به عبارتی قطع سازگاری با گذشته پایتون ۲ و بهبود خطاها و رخنه‌ها در نسخهٔ ۲ و همچنین حذف روش‌های قدیمی طراحی شد.[۳۶] به عبارتی دیگر لازم نیست که پایتون ۳ بتواند کدی که با پایتون ۲ نوشته شده را تفسیر کند که البته این مشکل توسط نرم‌افزار 2to3 حل می‌شود.[۳۷]

فلسفه
پایتون ۳٫۰ با همان فلسفه ورژن‌های قبل، در حال توسعه یافتن است، بنابراین هر منبعی در فلسفه پایتون، در پایتون ۳٫۰ به خوبی ظاهر خواهد شد. اگر چه، همان‌طور که پایتون روش‌های جدید در برنامه‌ریزی را جمع‌آوری کرده، پایتون ۳٫۰ تأکید زیادی بر از بین بردن ساختارها و ماژول‌های تکراری دارد: «باید یک – و ترجیحاً فقط یک – روش بدیهی برای انجام آن وجود داشته باشد.» با این وجود پایتون ۳٫۰ به ساختار زبان چند نمونه‌ای ادامه خواهد داد. کد نویس‌ها همچنان اختیارات شیء گرایی، برنامه‌نویسی ساخت یافته، برنامه‌نویسی تابعی و دیگر نمونه‌ها را دارند، اما در انتخاب‌های وسیع، جزئیات در پایتون ۳٫۰ آشکارتر از پایتون سری x.۲ هستند.

سازگاری و همزمانی

فراوانی وزنی تی‌اف-آی‌دی‌اف (به انگلیسی: tf–idf weight) مخّففِ term frequency - inverse document frequency یا فراوانی کلمه - معکوس فراوانی متن است.[۱] در این شیوه به هر کلمه‌ای در هر متن یک‌وزن بر اساس فراوانی آن در متن و فراوانی کلمه در سایر متونِ پیکره متنی داده می‌شود.[۲] در واقع هدف این سیستمِ وزن‌دهی، نشان‌دادن اهمیت کلمه در متن است. این مسئله کاربردهای بسیاری در بازیابی اطلاعات و متن کاوی دارد. وزن کلمه با افزایش تعداد تکرار آن در متن افزایش می‌یابد، اما توسط تعداد متونی که کلمه در آن ظاهر می‌شود کنترل می‌شود. به این معنی که اگر کلمه‌ای در بسیاری از متون ظاهر شود احتمالا کلمه‌ای متداول است و ارزش چندانی در ارزیابی متن ندارد.[۲] امروزه بیش از ۸۳ درصد از سامانه‌های توصیه‌گر در کتابخانه‌های دیجیتال از این روش وزن‌دهی کلمات استفاده می‌کنند.[۱]
محتویات

    ۱ تعریف ریاضی
        ۱.۱ تابع فراوانی کلمه (tf یا Term Frequency)
        ۱.۲ تابع معکوس فراوانی متن (idf یا Inverse document frequency)
        ۱.۳ فراوانی وزنی نهائی (tf-idf)
    ۲ مثال
